[{"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/index.js":"1","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/App.js":"2","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Router.js":"3","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Home.js":"4","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Auth.js":"5","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Profile.js":"6","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/AuthForm.js":"7","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Nweet.js":"8","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/NweetFactory.js":"9","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/fbase.js":"10","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Navigation.js":"11","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Follow.js":"12"},{"size":197,"mtime":1630994561201,"results":"13","hashOfConfig":"14"},{"size":1352,"mtime":1631113757999,"results":"15","hashOfConfig":"14"},{"size":1267,"mtime":1631026264532,"results":"16","hashOfConfig":"14"},{"size":1105,"mtime":1631142611301,"results":"17","hashOfConfig":"14"},{"size":1330,"mtime":1630995168531,"results":"18","hashOfConfig":"14"},{"size":3326,"mtime":1631025602931,"results":"19","hashOfConfig":"14"},{"size":1901,"mtime":1631112649249,"results":"20","hashOfConfig":"14"},{"size":3004,"mtime":1631113967796,"results":"21","hashOfConfig":"14"},{"size":2778,"mtime":1631025845792,"results":"22","hashOfConfig":"14"},{"size":791,"mtime":1631113660362,"results":"23","hashOfConfig":"14"},{"size":1239,"mtime":1631026230850,"results":"24","hashOfConfig":"14"},{"size":154,"mtime":1631026197137,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"16dqmmp",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/index.js",[],["58","59"],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/App.js",["60"],"import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./components/Router\";\nimport { authService, firebaseInstance } from \"./fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user.uid);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        // console.log(user);\n        // var updates = {};\n        // updates[\"/users/\" + user.uid] = {\n        //   username: user?.displayName,\n        //   email: user?.email,\n        // };\n        // firebaseInstance.database().ref().update(updates);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing ...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Router.js",["61"],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport Auth from \"../routes/Auth\";\nimport SearchUser from \"../routes/Follow\";\nimport Home from \"../routes/Home\";\nimport Profile from \"../routes/Profile\";\nimport Navigation from \"./Navigation\";\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}>\n            <Route exact path='/'>\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path='/profile'>\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Route exact path='/search'>\n              <SearchUser />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path='/'>\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Home.js",["62","63"],"import React, { useState, useEffect } from \"react\";\nimport { dbService, firebaseInstance, realtimeDatabase } from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  useEffect(() => {\n    dbService\n      .collection(userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const nweetArray = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setNweets(nweetArray);\n      });\n\n    realtimeDatabase\n      .ref(\"users/1234\")\n      .update({ username: userObj.displayName }, (err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div className='container'>\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Auth.js",[],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Profile.js",["64","65","66","67","68"],"import React, { useState, useEffect } from \"react\";\nimport { authService, dbService, storageService } from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [attachment, setAttachment] = useState(\"\");\n  let profileImgUrl = \"\";\n  useEffect(() => {\n    dbService\n      .collection(\"profile\")\n      .doc(userObj.uid)\n      .get()\n      .then(function (doc) {\n        if (doc.exists) {\n          profileImgUrl = doc.data().attachmentUrl;\n          setAttachment(profileImgUrl);\n        }\n      });\n  }, []);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`profile/${userObj.uid}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n      await dbService.doc(`profile/${userObj.uid}`).delete();\n    }\n\n    const profileArray = {\n      id: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"profile\").doc(userObj.uid).set(profileArray);\n    history.push(\"/\");\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <div className='profileContainer'>\n      <form onSubmit={onSubmit} className='profileForm'>\n        <label for='attach-file' className='PofileInput__label'>\n          <div className='img-thumbnail img-circle'>\n            <div>\n              {attachment ? (\n                <img className='profileImg' src={attachment} />\n              ) : (\n                <img\n                  className='profileImg'\n                  src={`https://avatars.dicebear.com/api/croodles-neutral/:${userObj.displayName}.svg`}\n                />\n              )}\n\n              <span className='span_upload'>UPLOAD</span>\n            </div>\n          </div>\n        </label>\n        <input\n          id='attach-file'\n          type='file'\n          accept='image/*'\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n        />\n\n        <input\n          onChange={onChange}\n          type='text'\n          autoFocus\n          placeholder='Display name'\n          value={newDisplayName}\n          className='formInput'\n        />\n        <input type='submit' value='Update Profile' className='formBtn' />\n      </form>\n\n      <button onClick={onLogOutClick} className='logOut'>\n        log out\n      </button>\n    </div>\n  );\n};\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/AuthForm.js",["69","70","71"],"import React, { useState } from \"react\";\nimport { authService, firebaseInstance } from \"../fbase\";\n\nconst inputStyles = {};\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className='container'>\n        <input\n          name='email'\n          type='email'\n          placeholder='Email'\n          required\n          value={email}\n          onChange={onChange}\n          className='authInput'\n        />\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          required\n          value={password}\n          onChange={onChange}\n          className='authInput'\n        />\n        <input\n          type='submit'\n          className='authInput authSubmit'\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <span className='authError'>{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className='authSwitch'>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Nweet.js",["72","73","74","75","76","77","78"],"import React, { useState, useEffect } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  // useEffect(() => {\n  //   let svg = createAvatar(style, {\n  //     seed: \"yoonhero\",\n  //     // ... and other options\n  //   });\n  //   setAvatar(svg)\n  // }, []);\n\n  const [avatar, setAvatar] = useState(\"\");\n\n  useEffect(() => {\n    dbService.collection(\"profile\").onSnapshot((snapshot) => {\n      snapshot.docs.map((doc) => {\n        if (doc.data().id == nweetObj.creatorId) {\n          setAvatar(doc.data().attachmentUrl);\n          return;\n        }\n      });\n    });\n  }, []);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== \"\") {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className='nweet'>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className='container nweetEdit'>\n            <input\n              type='text'\n              placeholder='Edit your nweet'\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className='formInput'\n            />\n            <input type='submit' value='Update Nweet' className='formBtn' />\n          </form>\n\n          <span onClick={toggleEditing} className='formBtn cancelBtn'>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <img\n            width={30}\n            src={\n              avatar != \"\"\n                ? avatar\n                : `https://avatars.dicebear.com/api/croodles-neutral/:${nweetObj.creatorId}.svg`\n            }\n          />\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img width={200} src={nweetObj.attachmentUrl} />\n          )}\n          {isOwner && (\n            <div class='nweet__actions'>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} color='#000' />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} color='#000' />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/NweetFactory.js",["79","80"],"import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(userObj.uid).add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n  return (\n    <form onSubmit={onSubmit} className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input\n          className='factoryInput__input'\n          value={nweet}\n          onChange={onChange}\n          type='text'\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type='submit' value='&rarr;' className='factoryInput__arrow' />\n      </div>\n      <label for='attach-file' className='factoryInput__label'>\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id='attach-file'\n        type='file'\n        accept='image/*'\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className='factoryForm__attachment'>\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className='factoryForm__clear' onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/fbase.js",[],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Navigation.js",[],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Follow.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":23,"nodeType":"87","messageId":"88","endLine":3,"endColumn":39},{"ruleId":"85","severity":1,"message":"89","line":6,"column":3,"nodeType":"87","messageId":"88","endLine":6,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":2,"column":21,"nodeType":"87","messageId":"88","endLine":2,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":25,"column":6,"nodeType":"92","endLine":25,"endColumn":8,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":5,"column":1,"nodeType":"96","endLine":119,"endColumn":3},{"ruleId":"90","severity":1,"message":"97","line":17,"column":27,"nodeType":"98","endLine":17,"endColumn":51},{"ruleId":"85","severity":1,"message":"99","line":72,"column":9,"nodeType":"87","messageId":"88","endLine":72,"endColumn":26},{"ruleId":"100","severity":1,"message":"101","line":81,"column":17,"nodeType":"102","endLine":81,"endColumn":64},{"ruleId":"100","severity":1,"message":"101","line":83,"column":17,"nodeType":"102","endLine":86,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":2,"column":23,"nodeType":"87","messageId":"88","endLine":2,"endColumn":39},{"ruleId":"85","severity":1,"message":"103","line":4,"column":7,"nodeType":"87","messageId":"88","endLine":4,"endColumn":18},{"ruleId":"85","severity":1,"message":"104","line":30,"column":9,"nodeType":"87","messageId":"88","endLine":30,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":22,"column":31,"nodeType":"107","messageId":"108","endLine":22,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":23,"column":27,"nodeType":"111","messageId":"112","endLine":23,"endColumn":29},{"ruleId":"105","severity":1,"message":"113","line":25,"column":11,"nodeType":"114","messageId":"115","endLine":25,"endColumn":18},{"ruleId":"90","severity":1,"message":"116","line":29,"column":6,"nodeType":"92","endLine":29,"endColumn":8,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"101","line":78,"column":11,"nodeType":"102","endLine":85,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":81,"column":22,"nodeType":"111","messageId":"112","endLine":81,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":88,"column":13,"nodeType":"102","endLine":88,"endColumn":61},{"ruleId":"85","severity":1,"message":"119","line":1,"column":27,"nodeType":"87","messageId":"88","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"101","line":83,"column":11,"nodeType":"102","endLine":88,"endColumn":13},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'firebaseInstance' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userObj.displayName' and 'userObj.uid'. Either include them or remove the dependency array.","ArrayExpression",["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assignments to the 'profileImgUrl' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","'onClearAttachment' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inputStyles' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'nweetObj.creatorId'. Either include it or remove the dependency array.",["123"],"Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [userObj.displayName, userObj.uid]",{"range":"128","text":"129"},"Update the dependencies array to be: [nweetObj.creatorId]",{"range":"130","text":"131"},[740,742],"[userObj.displayName, userObj.uid]",[881,883],"[nweetObj.creatorId]"]