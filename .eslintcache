[{"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/index.js":"1","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/App.js":"2","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Router.js":"3","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Home.js":"4","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Auth.js":"5","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Profile.js":"6","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/AuthForm.js":"7","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Nweet.js":"8","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/NweetFactory.js":"9","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/fbase.js":"10","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Navigation.js":"11","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Search.js":"12","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/UserRow.js":"13","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Comment.js":"14","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/reset.js":"15"},{"size":197,"mtime":1630994561201,"results":"16","hashOfConfig":"17"},{"size":1280,"mtime":1631658867625,"results":"18","hashOfConfig":"17"},{"size":1590,"mtime":1631658980829,"results":"19","hashOfConfig":"17"},{"size":2202,"mtime":1631228509429,"results":"20","hashOfConfig":"17"},{"size":1264,"mtime":1631659702629,"results":"21","hashOfConfig":"17"},{"size":3862,"mtime":1631187347719,"results":"22","hashOfConfig":"17"},{"size":2004,"mtime":1631660177675,"results":"23","hashOfConfig":"17"},{"size":4665,"mtime":1631228512637,"results":"24","hashOfConfig":"17"},{"size":3205,"mtime":1631225282302,"results":"25","hashOfConfig":"17"},{"size":791,"mtime":1631113660362,"results":"26","hashOfConfig":"17"},{"size":1239,"mtime":1631146213403,"results":"27","hashOfConfig":"17"},{"size":2243,"mtime":1631187174662,"results":"28","hashOfConfig":"17"},{"size":1779,"mtime":1631229283679,"results":"29","hashOfConfig":"17"},{"size":1566,"mtime":1631228605726,"results":"30","hashOfConfig":"17"},{"size":173,"mtime":1631658373765,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16dqmmp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/index.js",[],["70","71"],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/App.js",[],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Router.js",["72"],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Home.js",["73","74","75"],"import React, { useState, useEffect } from \"react\";\nimport { dbService, firebaseInstance, realtimeDatabase } from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  const NweetsHook = (snapshot) => {\n    const nweetArray = snapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n\n    setNweets((followNweet) => {\n      let allNweets = [...followNweet, ...nweetArray];\n      let sorted = allNweets.sort(function (a, b) {\n        return b.createdAt - a.createdAt;\n      });\n      // let uniqueArray = sorted.filter(function (item, pos) {\n      //   return sorted.indexOf(item) == pos;\n      // });\n\n      let uniqueArr = [];\n      let unq = [];\n      sorted.forEach((element) => {\n        if (!uniqueArr.includes(element.id)) {\n          uniqueArr.push(element.id);\n          unq.push(element);\n        }\n      });\n\n      return unq;\n    });\n  };\n\n  useEffect(async () => {\n    setNweets([]);\n\n    // find user's follower\n    let follows = [];\n    await realtimeDatabase\n      .ref(`users/${userObj.uid}/follow`)\n      .on(\"value\", function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          follows.push(childSnapshot.val());\n        });\n      });\n\n    // other people feeds\n    follows.map(async (follow) => {\n      if (follow === userObj.uid) {\n        return;\n      }\n      await dbService\n        .collection(follow)\n        .orderBy(\"createdAt\", \"desc\")\n        .limit(10)\n        .onSnapshot((snapshot) => NweetsHook(snapshot));\n    });\n\n    // my feeds\n    await dbService\n      .collection(userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .limit(10)\n      .onSnapshot((snapshot) => NweetsHook(snapshot));\n  }, []);\n\n  return (\n    <div className='container'>\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n            userObj={userObj}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Auth.js",["76"],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Profile.js",["77","78","79","80","81","82"],"import React, { useState, useEffect } from \"react\";\nimport {\n  authService,\n  dbService,\n  realtimeDatabase,\n  storageService,\n} from \"../fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const [attachment, setAttachment] = useState(\"\");\n  let profileImgUrl = \"\";\n  useEffect(() => {\n    // dbService\n    //   .collection(\"profile\")\n    //   .doc(userObj.uid)\n    //   .get()\n    //   .then(function (doc) {\n    //     if (doc.exists) {\n    //       profileImgUrl = doc.data().attachmentUrl;\n    //       setAttachment(profileImgUrl);\n    //     }\n    //   });\n\n    realtimeDatabase\n      .ref(\"users/\" + userObj.uid)\n      .once(\"value\", function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          var childKey = childSnapshot.key;\n          var childData = childSnapshot.val();\n          if (childKey === \"avatar\") {\n            setAttachment(childData);\n          }\n        });\n      });\n  }, []);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`profile/${userObj.uid}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n      await dbService.doc(`profile/${userObj.uid}`).delete();\n      await realtimeDatabase\n        .ref(`users/${userObj.uid}`)\n        .update({ avatar: attachmentUrl });\n    }\n\n    // const profileArray = {\n    //   id: userObj.uid,\n    //   attachmentUrl,\n    // };\n    // await dbService.collection(\"profile\").doc(userObj.uid).set(profileArray);\n    history.push(\"/\");\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(null);\n\n  return (\n    <div className='profileContainer'>\n      <form onSubmit={onSubmit} className='profileForm'>\n        <label for='attach-file' className='PofileInput__label'>\n          <div className='img-thumbnail img-circle'>\n            <div>\n              {attachment ? (\n                <img className='profileImg' src={attachment} />\n              ) : (\n                <img\n                  className='profileImg'\n                  src={`https://avatars.dicebear.com/api/croodles-neutral/:${userObj.displayName}.svg`}\n                />\n              )}\n\n              <span className='span_upload'>UPLOAD</span>\n            </div>\n          </div>\n        </label>\n        <input\n          id='attach-file'\n          type='file'\n          accept='image/*'\n          onChange={onFileChange}\n          style={{\n            opacity: 0,\n          }}\n        />\n\n        <input\n          onChange={onChange}\n          type='text'\n          autoFocus\n          placeholder='Display name'\n          value={newDisplayName}\n          className='formInput'\n        />\n        <input type='submit' value='Update Profile' className='formBtn' />\n      </form>\n\n      <button onClick={onLogOutClick} className='logOut'>\n        log out\n      </button>\n    </div>\n  );\n};\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/AuthForm.js",["83","84","85"],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Nweet.js",["86","87","88","89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport { dbService, realtimeDatabase, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router\";\n\nconst Nweet = ({ nweetObj, isOwner, userObj }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const [reply, setReply] = useState();\n  const [newReply, setNewReply] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(async () => {\n    await realtimeDatabase\n      .ref(`users/${nweetObj.creatorId}`)\n      .once(\"value\", (snapshot) => {\n        snapshot.forEach(function (childSnapshot) {\n          var childKey = childSnapshot.key;\n          var childData = childSnapshot.val();\n          if (childKey === \"avatar\") {\n            setAvatar(childData);\n            return;\n          }\n        });\n      });\n    await realtimeDatabase.ref(`reply/${nweetObj.id}`).on(\"value\", (snap) => {\n      let allReply = [];\n      snap.forEach((value) => {\n        allReply = [...allReply, value.val()];\n      });\n      setReply(allReply);\n    });\n  }, []);\n\n  const onNewReplyChange = (event) => {\n    setNewReply(event.target.value);\n  };\n\n  const onReplySubmit = async (event) => {\n    event.preventDefault();\n    let newReplyObject = {\n      id: reply.length,\n      createdAt: Date.now(),\n      reply: newReply,\n      username: userObj.displayName,\n      creatorId: userObj.uid,\n    };\n    await realtimeDatabase\n      .ref(`reply/${nweetObj.id}`)\n      .update([...reply, newReplyObject]);\n  };\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`${userObj.uid}/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== \"\") {\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n      }\n      await realtimeDatabase.ref(`reply/${nweetObj.id}`).remove();\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const seeMoreComments = () => history.push(`/comment/${nweetObj.id}`);\n\n  return (\n    <div className='nweet'>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className='container nweetEdit'>\n            <input\n              type='text'\n              placeholder='Edit your nweet'\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className='formInput'\n            />\n            <input type='submit' value='Update Nweet' className='formBtn' />\n          </form>\n\n          <span onClick={toggleEditing} className='formBtn cancelBtn'>\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <img\n            width={30}\n            src={\n              avatar != \"\"\n                ? avatar\n                : `https://avatars.dicebear.com/api/croodles-neutral/:${nweetObj.creatorId}.svg`\n            }\n          />\n          <h2>{nweetObj.username}</h2>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img width={200} src={nweetObj.attachmentUrl} />\n          )}\n          {isOwner && (\n            <div class='nweet__actions'>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} color='#000' />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} color='#000' />\n              </span>\n            </div>\n          )}\n          <form onSubmit={onReplySubmit}>\n            <input type='text' value={newReply} onChange={onNewReplyChange} />\n          </form>\n          {reply &&\n            reply.map((comment, index) => {\n              if (index >= 3) {\n                return;\n              }\n              return (\n                <>\n                  <div key={comment.id}>\n                    <p>{comment.username}</p>\n                    <p>{comment.reply}</p>\n                  </div>\n                  <hr />\n                </>\n              );\n            })}\n          <button onClick={() => seeMoreComments()}>more comments...</button>\n          <hr />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/NweetFactory.js",["92","93"],"import React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const [emotion, setEmotion] = useState(\"\");\n\n  const onChangeEmotion = (event) => {\n    setEmotion(event.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n      username: userObj.displayName,\n      emotion,\n    };\n    await dbService.collection(userObj.uid).add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(null);\n  return (\n    <form onSubmit={onSubmit} className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input\n          className='factoryInput__input'\n          value={nweet}\n          onChange={onChange}\n          type='text'\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type='submit' value='&rarr;' className='factoryInput__arrow' />\n      </div>\n      <label for='attach-file' className='factoryInput__label'>\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id='attach-file'\n        type='file'\n        accept='image/*'\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      <select value={emotion} onChange={onChangeEmotion}>\n        <option value='happy'>happy</option>\n        <option value='sad'>sad</option>\n        <option value='soso'>soso</option>\n        <option value='angry'>angry</option>\n      </select>\n      {attachment && (\n        <div className='factoryForm__attachment'>\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className='factoryForm__clear' onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/fbase.js",[],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/Navigation.js",[],"/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Search.js",["94"],"import React, { useState, useEffect } from \"react\";\nimport UserRow from \"../components/UserRow\";\nimport { realtimeDatabase } from \"../fbase\";\n\nconst SearchUser = ({ userObj }) => {\n  const [users, setUsers] = useState(\"\");\n  const [keyword, setKeyword] = useState(\"\");\n\n  const Search = async () => {\n    if (keyword === undefined || keyword === null) {\n      return;\n    }\n    await realtimeDatabase\n      .ref(\"users\")\n      .orderByChild(\"username\")\n      .equalTo(keyword)\n      .on(\"value\", function (snapshot) {\n        let searchResult = [];\n        snapshot.forEach(function (childSnapshot) {\n          var childData = childSnapshot.val();\n          var childKey = childSnapshot.key;\n          childData.uid = childKey;\n          if (searchResult.length < 10) {\n            searchResult.push(childData);\n          }\n        });\n        const jsonedResult = JSON.stringify(searchResult);\n        setUsers(jsonedResult);\n      });\n  };\n\n  useEffect(async () => {\n    // search\n    // childData.username.toLowerCase().includes(\"ggg\")\n    await realtimeDatabase\n      .ref(\"users\")\n      .limitToFirst(15)\n      .once(\"value\", function (snapshot) {\n        let searchResult = [];\n        snapshot.forEach(function (childSnapshot) {\n          var childData = childSnapshot.val();\n          var childKey = childSnapshot.key;\n          if (true) {\n            childData.uid = childKey;\n            searchResult.push(childData);\n          } else {\n            return;\n          }\n        });\n        const jsonedResult = JSON.stringify(searchResult);\n        setUsers(jsonedResult);\n      });\n  }, []);\n\n  const UsersRow = () => {\n    if (users) {\n      // console.log(userObj);\n      let searchResult = JSON.parse(users);\n      return searchResult.map((user) => {\n        return <UserRow {...user} userObj={userObj} />;\n      });\n    }\n  };\n\n  const onChange = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await Search();\n  };\n\n  return (\n    <div>\n      <h1>Search...</h1>\n      <form onSubmit={onSubmit}>\n        <input type='text' required value={keyword} onChange={onChange} />\n      </form>\n      {UsersRow()}\n    </div>\n  );\n};\n\nexport default SearchUser;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/components/UserRow.js",["95","96","97","98","99","100","101","102"],"import React, { useState, useEffect } from \"react\";\nimport { realtimeDatabase } from \"../fbase\";\n\nconst UserRow = ({ uid, avatar, username, userObj }) => {\n  const [follows, setFollows] = useState(false);\n\n  const getButton = async () => {\n    await realtimeDatabase\n      .ref(`users/${userObj.uid}/follow`)\n      .once(\"value\", function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          console.log(childSnapshot.val());\n          if (childSnapshot.val() == uid) {\n            setFollows(true);\n            return;\n          }\n        });\n      });\n  };\n\n  useEffect(async () => {\n    await getButton();\n  }, []);\n\n  const follow = async () => {\n    let alreadyFollow = [];\n    await realtimeDatabase\n      .ref(`users/${userObj.uid}/follow`)\n      .once(\"value\", function (snapshot) {\n        snapshot.forEach(function (childSnapshot) {\n          alreadyFollow.push(childSnapshot.val());\n        });\n      });\n\n    let newFollow = [];\n    let isDup = false;\n    alreadyFollow.map((auid, i) => {\n      if (auid == uid) {\n        isDup = true;\n        alreadyFollow.splice(i, 1);\n        return;\n      }\n    });\n    if (!isDup) {\n      newFollow = [...alreadyFollow, uid];\n    } else {\n      newFollow = [...alreadyFollow];\n    }\n\n    await realtimeDatabase.ref(`users/${userObj.uid}/follow`).set(newFollow);\n    setFollows(false);\n    await getButton();\n  };\n\n  return (\n    <div key={uid}>\n      <img\n        width={100}\n        src={\n          avatar != \"\"\n            ? avatar\n            : `https://avatars.dicebear.com/api/croodles-neutral/:${username}.svg`\n        }\n      />\n      <div>{username}</div>\n      <button onClick={() => follow()}>\n        {follows ? \"UnFollow\" : \"Follow\"}\n      </button>\n    </div>\n  );\n};\n\nexport default UserRow;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/routes/Comment.js",["103","104"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { realtimeDatabase } from \"../fbase\";\n\nconst Comment = ({ userObj }) => {\n  const [reply, setReply] = useState();\n  const [newReply, setNewReply] = useState(\"\");\n  const { id } = useParams();\n\n  const onNewReplyChange = (event) => {\n    setNewReply(event.target.value);\n  };\n\n  const onReplySubmit = async (event) => {\n    event.preventDefault();\n    let newReplyObject = {\n      id: reply.length,\n      createdAt: Date.now(),\n      reply: newReply,\n      username: userObj.displayName,\n      creatorId: userObj.uid,\n    };\n    await realtimeDatabase\n      .ref(`reply/${id}`)\n      .update([...reply, newReplyObject]);\n  };\n\n  useEffect(async () => {\n    await realtimeDatabase.ref(`reply/${id}`).on(\"value\", (snap) => {\n      let allReply = [];\n      snap.forEach((value) => {\n        allReply = [value.val(), ...allReply];\n      });\n      let sorted = allReply.sort(function (a, b) {\n        return b.createdAt - a.createdAt;\n      });\n      setReply(sorted);\n    });\n  }, []);\n\n  return (\n    <div>\n      <form onSubmit={onReplySubmit}>\n        <input type='text' value={newReply} onChange={onNewReplyChange} />\n      </form>\n      {reply &&\n        reply.map((comment, index) => {\n          return (\n            <>\n              <div key={comment.id}>\n                <p>{comment.username}</p>\n                <p>{comment.reply}</p>\n              </div>\n              <hr />\n            </>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Comment;\n","/Users/yoonseonghyeon/Desktop/YSH/programming/react/expremotion/src/reset.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":6,"column":3,"nodeType":"111","messageId":"112","endLine":6,"endColumn":11},{"ruleId":"109","severity":1,"message":"113","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":37},{"ruleId":"114","severity":1,"message":"115","line":37,"column":13,"nodeType":"116","endLine":68,"endColumn":4},{"ruleId":"114","severity":1,"message":"117","line":68,"column":6,"nodeType":"118","endLine":68,"endColumn":8,"suggestions":"119"},{"ruleId":"109","severity":1,"message":"120","line":4,"column":3,"nodeType":"111","messageId":"112","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"122","line":10,"column":1,"nodeType":"123","endLine":139,"endColumn":3},{"ruleId":"109","severity":1,"message":"124","line":14,"column":7,"nodeType":"111","messageId":"112","endLine":14,"endColumn":20},{"ruleId":"114","severity":1,"message":"117","line":38,"column":6,"nodeType":"118","endLine":38,"endColumn":8,"suggestions":"125"},{"ruleId":"109","severity":1,"message":"126","line":92,"column":9,"nodeType":"111","messageId":"112","endLine":92,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":101,"column":17,"nodeType":"129","endLine":101,"endColumn":64},{"ruleId":"127","severity":1,"message":"128","line":103,"column":17,"nodeType":"129","endLine":106,"endColumn":19},{"ruleId":"109","severity":1,"message":"113","line":2,"column":23,"nodeType":"111","messageId":"112","endLine":2,"endColumn":39},{"ruleId":"109","severity":1,"message":"130","line":5,"column":7,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"109","severity":1,"message":"131","line":31,"column":9,"nodeType":"111","messageId":"112","endLine":31,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":15,"column":13,"nodeType":"116","endLine":35,"endColumn":4},{"ruleId":"114","severity":1,"message":"132","line":35,"column":6,"nodeType":"118","endLine":35,"endColumn":8,"suggestions":"133"},{"ruleId":"127","severity":1,"message":"128","line":105,"column":11,"nodeType":"129","endLine":112,"endColumn":13},{"ruleId":"134","severity":1,"message":"135","line":108,"column":22,"nodeType":"136","messageId":"137","endLine":108,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":116,"column":13,"nodeType":"129","endLine":116,"endColumn":61},{"ruleId":"138","severity":1,"message":"139","line":134,"column":17,"nodeType":"140","messageId":"141","endLine":134,"endColumn":24},{"ruleId":"109","severity":1,"message":"142","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"128","line":96,"column":11,"nodeType":"129","endLine":101,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":32,"column":13,"nodeType":"116","endLine":53,"endColumn":4},{"ruleId":"134","severity":1,"message":"143","line":13,"column":35,"nodeType":"136","messageId":"137","endLine":13,"endColumn":37},{"ruleId":"114","severity":1,"message":"115","line":21,"column":13,"nodeType":"116","endLine":23,"endColumn":4},{"ruleId":"114","severity":1,"message":"144","line":23,"column":6,"nodeType":"118","endLine":23,"endColumn":8,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":37,"column":33,"nodeType":"116","messageId":"147","endLine":37,"endColumn":35},{"ruleId":"134","severity":1,"message":"143","line":38,"column":16,"nodeType":"136","messageId":"137","endLine":38,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":41,"column":9,"nodeType":"140","messageId":"141","endLine":41,"endColumn":16},{"ruleId":"127","severity":1,"message":"128","line":57,"column":7,"nodeType":"129","endLine":64,"endColumn":9},{"ruleId":"134","severity":1,"message":"135","line":60,"column":18,"nodeType":"136","messageId":"137","endLine":60,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":28,"column":13,"nodeType":"116","endLine":39,"endColumn":4},{"ruleId":"114","severity":1,"message":"148","line":39,"column":6,"nodeType":"118","endLine":39,"endColumn":8,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'firebaseInstance' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'userObj.uid'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'faTwitter' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'profileImgUrl' is assigned a value but never used.",["153"],"'onClearAttachment' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inputStyles' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'nweetObj.creatorId' and 'nweetObj.id'. Either include them or remove the dependency array.",["154"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'useEffect' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'getButton'. Either include it or remove the dependency array.",["155"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"157","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [userObj.uid]",{"range":"166","text":"167"},{"range":"168","text":"167"},"Update the dependencies array to be: [nweetObj.creatorId, nweetObj.id]",{"range":"169","text":"170"},"Update the dependencies array to be: [getButton]",{"range":"171","text":"172"},"Update the dependencies array to be: [id]",{"range":"173","text":"174"},[1806,1808],"[userObj.uid]",[1084,1086],[1267,1269],"[nweetObj.creatorId, nweetObj.id]",[636,638],"[getButton]",[1077,1079],"[id]"]